AWSTemplateFormatVersion: 2010-09-09
Description: >
  Olawale Akin-Odanye / Udacity Project:
  This Cloudformation script is a template for setting up the networking infrastructure
  of a  fictional social media company called Udagram

Parameters: 
  vpcCIDR:
    Type: String
    Description: Alloted CIDR block for the Virtual Private Cloud
  
  EnvironmentName:
    Type: String
    Description: Environment name used to identify resources created from this stack

  PublicSubnetCIDR1:
    Type: String
    Description: Alloted CIDR Block for the Public Subnet in AZ1

  PublicSubnetCIDR2:
    Type: String
    Description: Alloted CIDR Block for the Public Subnet in AZ2

  PrivateSubnetCIDR1:
    Type: String
    Description: Alloted CIDR Block for the Private Subnet in AZ1

  PrivateSubnetCIDR2:
    Type: String
    Description: Alloted CIDR Block for the Private Subnet in AZ2

Resources:
  # Virtual Private Cloud
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref vpcCIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-IGW

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Availability Zone 1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnetCIDR1
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PUB-NET1

  NATGatewayEIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-NAT-EIP1

  NATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-NAT1

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnetCIDR1
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PRIV-NET1

  # Availability Zone 2
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnetCIDR2
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PUB-NET2

  NATGatewayEIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-NAT-EIP2

  NATGateway2:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt NATGatewayEIP2.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-NAT2

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnetCIDR2
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PRIV-NET2

  # Routing of public subnet traffic
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PUB-ROUTE-TABLE

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0

  PublicSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  # Routing of private subnet traffic
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PRIV-ROUTE-TABLE-1

  PrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn:
      - InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      NatGatewayId: !Ref NATGateway1
      DestinationCidrBlock: 0.0.0.0/0

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PRIV-ROUTE-TABLE-2

  PrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn:
      - InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      NatGatewayId: !Ref NATGateway2
      DestinationCidrBlock: 0.0.0.0/0

  PrivateSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2


Outputs: 
  VPCOut:
    Description: The VPC Id
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VPC
  PublicSubnetsOut:
    Description: All Public Subnets
    Value: !Join [',', [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${EnvironmentName}-PUB-NETS

  PrivateSubnetsOut:
    Description: All Private Subnets
    Value: !Join [',', [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: !Sub ${EnvironmentName}-PRIV-NETS

  # Availability Zone 1
  PublicSubnet1Out:
    Description: Public subnet of AZ1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PUB-NET-1

  PrivateSubnet1Out:
    Description: Public subnet of AZ1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PRIV-NET-1

  # Availability Zone 2
  PublicSubnet2Out:
    Description: Public subnet of AZ2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PUB-NET-2

  PrivateSubnet2Out:
    Description: Public subnet of AZ2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PRIV-NET-2

  